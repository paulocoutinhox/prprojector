name: Build - macOS

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'extras/images/**'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            target: "macos"
          }
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade PIP
      run: python3 -m pip install --upgrade pip setuptools wheel

    - name: Display python version
      run: python3 --version

    - name: Display PIP version
      run: python3 -m pip --version

    - name: Install python dependencies
      run: python3 -m pip install -r requirements.txt

    - name: Install application certificate
      uses: apple-actions/import-codesign-certs@v2
      with:
        keychain: ${{ github.run_id }}
        keychain-password: ${{ github.run_id }}
        p12-file-base64: ${{ secrets.MAC_APPLICATION_CERTIFICATE_P12 }}
        p12-password: ${{ secrets.MAC_APPLICATION_CERTIFICATE_PASSPHRASE }}

    - name: Install installer certificate
      uses: apple-actions/import-codesign-certs@v2
      with:
        keychain: ${{ github.run_id }}
        keychain-password: ${{ github.run_id }}
        create-keychain: false
        p12-file-base64: ${{ secrets.MAC_INSTALLER_CERTIFICATE_P12 }}
        p12-password: ${{ secrets.MAC_INSTALLER_CERTIFICATE_PASSPHRASE }}

    - name: Build
      run: python3 make.py run build-${{ matrix.config.target }}

    - name: Save
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: artifact-${{ matrix.config.target }}
        path: build/${{ matrix.config.target }}/pkg/PRProjector-macos-x64-release.pkg

  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: [build]
      if: startsWith(github.ref, 'refs/tags/')
      steps:
        - name: Load
          uses: actions/download-artifact@v2
          with:
            name: artifact-macos-x64
        - name: Get release
          id: get_release
          uses: bruceadams/get-release@v1.2.2
          env:
            GITHUB_TOKEN: ${{ github.token }}
        - name: Upload release asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.get_release.outputs.upload_url }}
            asset_path: PRProjector-macos-x64-release.pkg
            asset_name: PRProjector-macos-x64-release.pkg
            asset_content_type: application/x-newton-compatible-pkg
